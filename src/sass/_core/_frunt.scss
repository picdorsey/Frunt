// Frunt
// Clean, reusable component architecture.
// Inspired by http://www.csstyle.io

// Config
$csstyle-component-symbol: '\\~' !default;
$csstyle-part-symbol: '__' !default;
$csstyle-option-symbol: '\\--' !default;
$csstyle-tweak-symbol: '\\+' !default;
$csstyle-layout-symbol: '\\@' !default;
$csstyle-root-id: 'frunt' !default;


//
// Build
// --------------------------------------------------
@function _build($prefix, $names){
    $selector: "";

    @for $i from 1 through length($names){
      $selector: $selector + $prefix + nth($names, $i);

      @if($i != length($names)){
        $selector: $selector + ",";
      }
    }

    @return $selector;
}

// components
@mixin component($names...){
  #{_build("." + $csstyle-component-symbol, $names)}{
    @content
  }
}

// options
// override components
@mixin option($names...){
  #{_build("&." + $csstyle-option-symbol, $names)}{
    @content;
  }
}

// parts
// make up the structure of a component
// override components
@mixin part($names...){
    // check if nested in an option
    $optionIndex: str-index(#{&}, "." + $csstyle-option-symbol);
    $optionIndex: 0 !default;
    $optionIndex: $optionIndex - 1;

    // check if nested in another part
    $partIndex: str-index(#{&}, $csstyle-part-symbol);
    $partIndex: 0 !default;
    $partIndex: $partIndex - 1;

    $component: str-slice(#{&}, 0, $optionIndex);

    // part is nested in an option
    @if $optionIndex > 0 {
      // part is also nested in another part
      @if ($partIndex > 0){
        #{_build("&" + $csstyle-part-symbol, $names)}{
          @content;
        }
      }
      @else{
        #{_build("& " + $component + $csstyle-part-symbol, $names)}{
          @content;
        }
      }
    }
    @else {
      #{_build("&" + $csstyle-part-symbol, $names)}{
        @content;
      }
    }
}

// partials
@mixin partial($names...){
    #{_build("#", $names)}{
        @content
    }
}

// tweaks
// override components, options, and modifiers
@mixin tweak($names...){
  #{_build("#" + $csstyle-root-id + " ." + $csstyle-tweak-symbol, $names)}{
    @content;
  }
}

// Layouts
// Override components, parts, options, and tweaks
@mixin layout($names...){
  #{_build("#" + $csstyle-root-id + " ." + $csstyle-layout-symbol, $names)}{
    @content;
  }
}
